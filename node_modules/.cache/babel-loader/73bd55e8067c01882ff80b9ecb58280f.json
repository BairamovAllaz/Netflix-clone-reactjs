{"ast":null,"code":"var _jsxFileName = \"/home/ellez/Desktop/netflix-clone/src/components/Slide.tsx\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Slide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, History, Pagination, Lazy } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\nimport axios from \"../api/axios\";\nimport { useEffect, useState } from \"react\";\nimport request from \"../api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Autoplay, History, Pagination, Lazy]);\n\nconst Slide = () => {\n  _s();\n\n  const [toprated, settoprated] = useState([]);\n  useEffect(() => {\n    axios.get(request.fetchtoprated).then(dat => {\n      settoprated(dat.data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Slide_all\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      navigation: true,\n      pagination: true,\n      scrollbar: true,\n      style: {\n        height: \"100%\"\n      },\n      autoplay: true,\n      children: toprated.slice(0, 5).map(r => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Slide_inbox\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: r.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slide, \"XwICwOfb/dFgB1qA3AgFhzFgc80=\");\n\n_c = Slide;\nexport default Slide;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slide\");","map":{"version":3,"sources":["/home/ellez/Desktop/netflix-clone/src/components/Slide.tsx"],"names":["Swiper","SwiperSlide","SwiperCore","Autoplay","History","Pagination","Lazy","axios","useEffect","useState","request","use","Slide","toprated","settoprated","get","fetchtoprated","then","dat","data","results","height","slice","map","r","width","title"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,QAArB,EAA+BC,OAA/B,EAAwCC,UAAxC,EAAoDC,IAApD,QAAgE,QAAhE;AACA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGAR,UAAU,CAACS,GAAX,CAAe,CAACR,QAAD,EAAWC,OAAX,EAAoBC,UAApB,EAAgCC,IAAhC,CAAf;;AAEA,MAAMM,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAc,EAAd,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACQ,GAAN,CAAUL,OAAO,CAACM,aAAlB,EAAiCC,IAAjC,CAAuCC,GAAD,IAAS;AAC7CJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,UAAU,EAAE,IAFd;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAJT;AAKE,MAAA,QAAQ,MALV;AAAA,gBAMGR,QAAQ,CAACS,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAA0BC,CAAD,iBACxB,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAApB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAA,sBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMd,K;;KAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import \"../styles/Slide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, History, Pagination, Lazy } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\nimport axios from \"../api/axios\";\nimport { useEffect, useState } from \"react\";\nimport request from \"../api/Api\";\nimport { Itoprated } from \"../types/fetchdata\";\n\nSwiperCore.use([Autoplay, History, Pagination, Lazy]);\n\nconst Slide = () => {\n  const [toprated, settoprated] = useState<Itoprated[]>([]);\n\n  useEffect(() => {\n    axios.get(request.fetchtoprated).then((dat) => {\n      settoprated(dat.data.results);\n    });\n  }, []);\n\n  return (\n    <div className='Slide_all'>\n      <Swiper\n        navigation\n        pagination={true}\n        scrollbar\n        style={{ height: \"100%\" }}\n        autoplay>\n        {toprated.slice(0, 5).map((r) => (\n          <SwiperSlide style={{ width: \"100%\" }}>\n            <div className='Slide_inbox'>\n              <h1>{r.title}</h1>\n            </div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}