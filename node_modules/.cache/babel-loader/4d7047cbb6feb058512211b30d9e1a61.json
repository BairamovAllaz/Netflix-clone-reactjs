{"ast":null,"code":"var _jsxFileName = \"/home/ellez/Desktop/netflix-clone/src/components/Showdatas.tsx\";\nimport \"../styles/Showdata.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Showdatas = ({\n  title,\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Show-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Show-data-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Show-data-slide-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Show-slide\",\n          children: data.slice(1, 10).map(dat => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Showdatas;\nexport default Showdatas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showdatas\");","map":{"version":3,"sources":["/home/ellez/Desktop/netflix-clone/src/components/Showdatas.tsx"],"names":["Showdatas","title","data","slice","map","dat","backgroundColor"],"mappings":";AAEA,OAAO,yBAAP;;;AAMA,MAAMA,SAAmB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAC/C,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA,oBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGC,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,EAAd,EAAkBC,GAAlB,CAAuBC,GAAD,iBACrB;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAE;AAAnB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMN,S;AAmBN,eAAeA,SAAf","sourcesContent":["import { FC, useEffect } from \"react\";\nimport { Ifilms, Itrends } from \"../types/fetchdata\";\nimport \"../styles/Showdata.scss\";\ninterface prop {\n  title: string;\n  data: Itrends[] | Ifilms[];\n}\n\nconst Showdatas: FC<prop> = ({ title, data }) => {\n  return (\n    <div>\n      <div className='Show-data'>\n        <div className='Show-data-header'>\n          <p>{title}</p>\n        </div>\n        <div className='Show-data-slide-div'>\n          <div className='Show-slide'>\n            {data.slice(1, 10).map((dat) => (\n              <div style={{ backgroundColor: \"red\" }}></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Showdatas;\n"]},"metadata":{},"sourceType":"module"}