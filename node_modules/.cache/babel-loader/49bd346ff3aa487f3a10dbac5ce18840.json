{"ast":null,"code":"var _jsxFileName = \"/home/ellez/Desktop/netflix-clone/src/components/Slide.tsx\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Slide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, History, Pagination, Lazy } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\nimport { RiNetflixFill } from \"react-icons/ri\";\nimport axios from \"../api/axios\";\nimport { useEffect, useState } from \"react\";\nimport request from \"../api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Autoplay, History, Pagination, Lazy]);\n\nconst Slide = () => {\n  _s();\n\n  const [upcomingdata, setupcomingdata] = useState([]);\n  useEffect(() => {\n    axios.get(request.fetchUpcoming).then(dat => {\n      setupcomingdata(dat.data.results);\n      console.log(dat.data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Slide_all\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slide-start\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        pagination: true,\n        scrollbar: true,\n        autoplay: true,\n        lazy: true,\n        history: true,\n        children: upcomingdata.slice(12, 17).map(r => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Slide_inbox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Image\",\n              style: {\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${r.backdrop_path} )`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Image-innter-text-div\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"icon-header\",\n                  children: [/*#__PURE__*/_jsxDEV(RiNetflixFill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"SERIES\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title\",\n                  children: r.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"upcoming\",\n                  children: r.release_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slide, \"x30+OkLZMVL3adbf36PM8YDTOV0=\");\n\n_c = Slide;\nexport default Slide;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slide\");","map":{"version":3,"sources":["/home/ellez/Desktop/netflix-clone/src/components/Slide.tsx"],"names":["Swiper","SwiperSlide","SwiperCore","Autoplay","History","Pagination","Lazy","RiNetflixFill","axios","useEffect","useState","request","use","Slide","upcomingdata","setupcomingdata","get","fetchUpcoming","then","dat","data","results","console","log","slice","map","r","backgroundImage","backdrop_path","title","release_date"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,QAArB,EAA+BC,OAA/B,EAAwCC,UAAxC,EAAoDC,IAApD,QAAgE,QAAhE;AACA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGAT,UAAU,CAACU,GAAX,CAAe,CAACT,QAAD,EAAWC,OAAX,EAAoBC,UAApB,EAAgCC,IAAhC,CAAf;;AAEA,MAAMO,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAc,EAAd,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACQ,GAAN,CAAUL,OAAO,CAACM,aAAlB,EAAiCC,IAAjC,CAAuCC,GAAD,IAAS;AAC7CJ,MAAAA,eAAe,CAACI,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASC,OAArB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,QAAQ,EAAE,IAHZ;AAIE,QAAA,IAAI,EAAE,IAJR;AAKE,QAAA,OAAO,EAAE,IALX;AAAA,kBAMGP,YAAY,CAACU,KAAb,CAAmB,EAAnB,EAAuB,EAAvB,EAA2BC,GAA3B,CAAgCC,CAAD,iBAC9B,QAAC,WAAD;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,OADZ;AAEE,cAAA,KAAK,EAAE;AACLC,gBAAAA,eAAe,EAAG,2CAA0CD,CAAC,CAACE,aAAc;AADvE,eAFT;AAAA,qCAKE;AAAK,gBAAA,SAAS,EAAC,uBAAf;AAAA,wCACE;AAAG,kBAAA,SAAS,EAAC,aAAb;AAAA,0CACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAKE;AAAG,kBAAA,SAAS,EAAC,OAAb;AAAA,4BAAsBF,CAAC,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAG,kBAAA,SAAS,EAAC,UAAb;AAAA,4BAAyBH,CAAC,CAACI;AAA3B;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA3CD;;GAAMjB,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import \"../styles/Slide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, History, Pagination, Lazy } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\nimport { RiNetflixFill } from \"react-icons/ri\";\nimport axios from \"../api/axios\";\nimport { useEffect, useState } from \"react\";\nimport request from \"../api/Api\";\nimport { Itoprated } from \"../types/fetchdata\";\n\nSwiperCore.use([Autoplay, History, Pagination, Lazy]);\n\nconst Slide = () => {\n  const [upcomingdata, setupcomingdata] = useState<Itoprated[]>([]);\n\n  useEffect(() => {\n    axios.get(request.fetchUpcoming).then((dat) => {\n      setupcomingdata(dat.data.results);\n      console.log(dat.data.results);\n    });\n  }, []);\n\n  return (\n    <div className='Slide_all'>\n      <div className='Slide-start'>\n        <Swiper\n          pagination={true}\n          scrollbar\n          autoplay={true}\n          lazy={true}\n          history={true}>\n          {upcomingdata.slice(12, 17).map((r) => (\n            <SwiperSlide>\n              <div className='Slide_inbox'>\n                <div\n                  className='Image'\n                  style={{\n                    backgroundImage: `url(https://image.tmdb.org/t/p/original/${r.backdrop_path} )`,\n                  }}>\n                  <div className='Image-innter-text-div'>\n                    <p className='icon-header'>\n                      <RiNetflixFill />\n                      <span>SERIES</span>\n                    </p>\n                    <p className='title'>{r.title}</p>\n                    <p className='upcoming'>{r.release_date}</p>\n                  </div>\n                </div>\n              </div>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n};\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}