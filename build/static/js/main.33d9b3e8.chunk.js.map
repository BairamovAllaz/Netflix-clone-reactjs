{"version":3,"sources":["components/Navbar.tsx","api/axios.tsx","api/Api.tsx","components/Slide.tsx","components/Showdatas.tsx","components/Trends.tsx","components/Datas.tsx","components/Footer.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","useState","small","setSmall","refContext","React","useContext","RefContext","opentoggle","setopentoggle","useEffect","window","addEventListener","pageYOffset","scroolToHome","e","preventDefault","HomeComponentRef","current","scrollIntoView","behavior","block","scrollToUpcoming","UpcomingComponentRef","scrollToTrend","TrendComponentRef","className","onClick","style","fontSize","marginLeft","color","intance","axios","create","baseURL","API_KEY","request","fetchtrend","fetchtoprated","fetchUpcoming","fetchlatest","SwiperCore","use","Autoplay","History","Pagination","Lazy","Slide","upcomingdata","setupcomingdata","context","get","then","dat","data","results","console","log","ref","pagination","scrollbar","autoplay","lazy","history","slice","map","r","backgroundImage","backdrop_path","title","release_date","hexcolor","overview","parseInt","substr","Showdatas","s","src","width","height","Trends","original_title","popularity","Datas","trendfilms","settrendfilms","upcomingfilms","setupcomingfilms","topratedfilms","settopratefilms","border","marginBottom","Footer","createContext","App","useRef","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33d9b3e8.chunk.js","sourcesContent":["import \"../styles/Navbar.scss\";\nimport React, { RefObject } from 'react';\nimport { RiNetflixFill } from \"react-icons/ri\";\nimport { GrMenu } from \"react-icons/gr\";\nimport { ImCancelCircle } from \"react-icons/im\";\nimport { useEffect, useState } from \"react\";\nimport { RefContext, types } from '../App';\n\nconst Navbar = () => {\n\n  const [small, setSmall] = useState<boolean>(false);\n  const refContext = React.useContext(RefContext);\n  const [opentoggle, setopentoggle] = useState<boolean>(false);\n\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"scroll\", () => {\n        setSmall(window.pageYOffset > 200);\n        setopentoggle(false);\n      });\n    }\n  }, []);\n\n  const scroolToHome = (e: any): void => {\n    e.preventDefault();\n    if (!refContext?.HomeComponentRef) {\n      return;\n    }\n    refContext?.HomeComponentRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n\n  const scrollToUpcoming = (e: any): void => {\n    e.preventDefault();\n    if (!refContext?.UpcomingComponentRef) {\n      return;\n    }\n    refContext?.UpcomingComponentRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n\n  const scrollToTrend = (e : any) : void => { \n      e.preventDefault();\n      if (!refContext?.TrendComponentRef) {\n        return;\n      }\n      refContext?.TrendComponentRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n  }\n\n  return (\n    <div>\n      {opentoggle ? (\n        <div className='minsize'>\n          <div className='toggles-min'>\n            <ul>\n              <li onClick={scroolToHome}>Home</li>\n              <li onClick={scrollToUpcoming}>Top rated</li>\n              <li onClick={scrollToTrend}>Trend</li>\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <div className={`Navbar ${small ? \"small\" : \"\"}`}>\n        <div className='icon'>\n          <RiNetflixFill style={{ fontSize: \"30px\", marginLeft: \"20px\",color : `${small ? \"black\" : \"white\"}` }} />\n        </div>\n        <div className='open-toggle' onClick={() => setopentoggle(!opentoggle)}>\n          {opentoggle ? <ImCancelCircle /> : <GrMenu />}{\" \"}\n        </div>\n        <div className='toggles'>\n          <ul>\n            <li onClick={scroolToHome}>Home</li>\n            <li onClick={scrollToUpcoming}>Top rated</li>\n            <li onClick={scrollToTrend}>Trend</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\nconst intance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default intance;\n","const API_KEY = \"e2163709e499822f22a3b3755cf6fd52\";\n\nconst request = {\n  fetchtrend: `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`,\n  fetchtoprated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`,\n  fetchUpcoming: `/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`,\n  fetchlatest: `/movie/latest?api_key=${API_KEY}&language=en-US`,\n};\n\nexport default request;\n","import \"../styles/Slide.scss\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport React from 'react';\nimport SwiperCore, { Autoplay, History, Pagination, Lazy } from \"swiper\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"swiper/components/scrollbar/scrollbar.scss\";\nimport { RiNetflixFill } from \"react-icons/ri\";\nimport axios from \"../api/axios\";\nimport { useEffect, useState } from \"react\";\nimport request from \"../api/Api\";\nimport { Ifilms } from \"../types/fetchdata\";\nimport { RefContext } from '../App';\n\nSwiperCore.use([Autoplay, History, Pagination, Lazy]);\n\nconst Slide = () => {\n  const [upcomingdata, setupcomingdata] = useState<Ifilms[]>([]);\n  const context = React.useContext(RefContext);\n\n  \n  useEffect(() => {\n    axios.get(request.fetchUpcoming).then((dat) => {\n      setupcomingdata(dat.data.results);\n    });\n  }, []);\n\n\n  React.useEffect(() => { \n    console.log(context?.HomeComponentRef);\n  }, [context?.HomeComponentRef])\n\n  const getContrastYIQ = (hexcolor: any) => {\n    var r = parseInt(hexcolor.substr(0, 2), 16);\n    var g = parseInt(hexcolor.substr(2, 2), 16);\n    var b = parseInt(hexcolor.substr(4, 2), 16);\n    var yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    return yiq >= 128 ? \"black\" : \"white\";\n  };\n\n  return (\n    <div className='Slide_all' ref={context?.HomeComponentRef}>\n      <div className='Slide-start'>\n        <Swiper\n          pagination={true}\n          scrollbar\n          autoplay={true}\n          lazy={true}\n          history={true}>\n          {upcomingdata.slice(12, 17).map((r) => (\n            <SwiperSlide>\n              <div className='Slide_inbox'>\n                <div\n                  className='Image'\n                  style={{\n                    backgroundImage: `url(https://image.tmdb.org/t/p/original/${r.backdrop_path} )`,\n                  }}>\n                  <div className='Image-innter-text-div'>\n                    <p className='icon-header'>\n                      <RiNetflixFill />\n                      <span>SERIES</span>\n                    </p>\n                    <p className='title'>{r.title}</p>\n                    <p className='upcoming'>\n                      <span>Release date</span>-{r.release_date}\n                    </p>\n                    <p\n                      className='about-text'\n                      style={{ color: `${getContrastYIQ(r.overview)}` }}>\n                      {r.overview}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n};\n\nexport default Slide;\n","import { FC, useEffect } from \"react\";\nimport React from 'react';\nimport { Ifilms, Itrends } from \"../types/fetchdata\";\nimport \"../styles/Showdata.scss\";\n\ninterface prop {\n  title: string;\n  data: Ifilms[];\n}\n\nconst Showdatas: FC<prop> = ({ title, data }) => {\n\n  return (\n    <div>\n      <div className='Show-data'>\n        <div className='Show-data-header'>\n          <p>{title}</p>\n        </div>\n        <div className='Show-data-slide-div'>\n          <div className='Show-slide'>\n            {data.map((s) => (\n              <div className='Show-slide-scrolll-in'>\n                <div className='image'>\n                  <img\n                    src={`https://image.tmdb.org/t/p/original/${s.backdrop_path}`}\n                    width='100%'\n                    height='100%'\n                  />\n                </div>\n                <p>{s.title}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Showdatas;\n","import { FC, useEffect } from \"react\";\nimport React from 'react';\nimport \"../styles/Trend.scss\";\nimport { Itrends } from \"../types/fetchdata\";\nimport { RefContext } from \"../App\";\n\ninterface prop {\n  data: Itrends[];\n}\n\nconst Trends: FC<prop> = ({ data }) => {\n  const refContext = React.useContext(RefContext);\n\n  return (\n    <div ref={refContext?.TrendComponentRef}>\n      <div className='Trends' >\n        <h1>Trends</h1>\n        <div className='container-fluid'>\n          <div className='row'>\n            <div className='col-md-4 col-sm-12'>\n              <div className='first-trend'>\n                <div className = \"Img-div\"> \n                <img\n                  src={`https://image.tmdb.org/t/p/original/${data[4].backdrop_path}`}\n                  className='img-fluid'\n                />\n                </div>\n                <div className='indiv'>\n                  <ul>\n                    <li>\n                      Title : <span>{data[4].original_title}</span>\n                    </li>\n                    <li>\n                      Overview : <span>{data[4].overview}</span>\n                    </li>\n                    <li>\n                      Release date : <span>{data[4].release_date}</span>\n                    </li>\n                    <li>\n                      Views : <span>{data[4].popularity}</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className='col-md-8  col-sm-12'>\n              <div className='All-trends '>\n                {data.map((dat) => (\n                  <div className='in-alltrends'>\n                    <div className='img'>\n                      <img\n                        src={`https://image.tmdb.org/t/p/original/${dat.backdrop_path}`}\n                        className='img-fluid'\n                      />\n                    </div>\n                    <div className='information'>\n                      <p>Title: {dat.title}</p>\n                      <p>Release date: {dat.release_date}</p>\n                      <p>Popularity: {dat.popularity}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Trends;\n","import { useEffect, useState } from \"react\";\nimport React from 'react';\nimport request from \"../api/Api\";\nimport axios from \"../api/axios\";\nimport Showdata from \"./Showdatas\";\nimport { Itrends } from \"../types/fetchdata\";\nimport { Ifilms } from \"../types/fetchdata\";\nimport Trends from \"./Trends\";\nimport { RefContext } from \"../App\";\nconst Datas = () => {\n  const [trendfilms, settrendfilms] = useState<Itrends[] | null>(null);\n  const [upcomingfilms, setupcomingfilms] = useState<Ifilms[] | null>(null);\n  const [latestfilms, setlatest] = useState<Ifilms[] | null>(null);\n  const [topratedfilms, settopratefilms] = useState<Ifilms[] | null>(null);\n\n\n  const refContext = React.useContext(RefContext);\n\n\n  useEffect(() => {\n    axios.get(request.fetchUpcoming).then((dat) => {\n      setupcomingfilms(dat.data.results); //ren\n    });\n\n    axios.get(request.fetchtoprated).then((dat) => {\n      settopratefilms(dat.data.results);\n    });\n\n    axios.get(request.fetchtrend).then((dat) => {\n      settrendfilms(dat.data.results);\n    });\n  }, []);\n\n  if(!upcomingfilms || !topratedfilms || !trendfilms)\n  { \n    return <h1>Loding...</h1>\n  }\n  return (\n    <div>\n      <div ref = {refContext?.UpcomingComponentRef}/>\n      <Showdata title='Upcoming films' data={upcomingfilms} />\n      <Showdata title='Top rated films' data={topratedfilms} />\n      <hr style={{ color: \"white\", border: \"9px\", marginBottom: \"60px\" }} />\n      <Trends data={trendfilms} />\n    </div>\n  );\n};\n\nexport default Datas;\n","import React from 'react'\nimport '../styles/Footer.scss'\nfunction Footer() {\n  return (\n    <div>\n       <div className='FooterMain'>\n            <p>Created By Allaz Bairamov</p>         \n        </div> \n    </div>\n  )\n}\n\nexport default Footer","import \"./App.scss\";\nimport React from 'react'\nimport Navbar from \"./components/Navbar\";\nimport Slide from \"./components/Slide\";\nimport Datas from \"./components/Datas\";\nimport Footer from './components/Footer';\n\n//TODO #1 SEPERATE FUNCTION TO COMPONENTS #2 CREATE PAGE TO SHOW INFO \n\n\nexport interface types {\n  HomeComponentRef: React.RefObject<any> | null,\n  UpcomingComponentRef: React.RefObject<any> | null,\n  TrendComponentRef : React.RefObject<any | null>\n}\n\nexport const RefContext = React.createContext<types | null>(null);\n\nfunction App() {\n  const HomeComponentRef = React.useRef<any>(null);\n  const UpcomingComponentRef = React.useRef<any>(null);\n  const TrendComponentRef = React.useRef<any>(null);\n\n  return (\n    <div className='App'>\n      <RefContext.Provider value={{ HomeComponentRef, UpcomingComponentRef, TrendComponentRef }}>\n        <Navbar />\n        <div style={{width : \"100%\", height: \"40px\" }}></div>\n        <Slide />\n        <Datas />\n        <Footer/>\n      </RefContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}